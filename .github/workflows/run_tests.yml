name: _run-tests
on:
  workflow_call:
    inputs:
      marker:
        description: 'pytest -m expression (e.g., `not integration` or `integration`)'
        required: true
        type: string
      extra-args:
        description: 'Extra pytest args (optional)'
        required: false
        default: ''
        type: string
    secrets: {}

jobs:
  discover-plugins:
    name: Discover plugins
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen.outputs.matrix }}
    steps:
      - uses: ./.github/actions/python-uv-setup
      - name: Build matrix
        id: gen
        shell: bash
        run: |
          plugins="$(ls -1d plugins/* 2>/dev/null | xargs -n1 basename | jq -R . | jq -s .)" || plugins="[]"
          matrix=$(jq -n --argjson plugins "$plugins" '{plugin: (["core"] + $plugins), python: ["3.10","3.11","3.12"]}')
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  lint:
    name: Ruff lint
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/python-uv-setup
      - name: Run Ruff
        run: uv run ruff check .

  test:
    name: Py${{ matrix.python }} — ${{ matrix.plugin }} — -m "${{ inputs.marker }}"
    needs: discover-plugins
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.discover-plugins.outputs.matrix) }}
    timeout-minutes: 30
    env:
      PYTHONDONTWRITEBYTECODE: 1
      PLUGIN: ${{ matrix.plugin }}
    steps:
      - uses: ./.github/actions/python-uv-setup

