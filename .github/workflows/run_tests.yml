name: _run-tests
on:
  workflow_call:
    inputs:
      marker:
        description: 'pytest -m expression (e.g., `not integration` or `integration`)'
        required: true
        type: string
    secrets: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UV_LINK_MODE: copy

jobs:
  lint:
    name: Ruff & mypy
    runs-on: build1
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: ./.github/actions/python-uv-setup
      - name: Run Ruff
        run: uv run ruff check .
      - name: Mypy core
        run: uv run mypy --install-types --non-interactive agents-core/vision_agents
      - name: Mypy plugins
        run: uv run mypy --install-types --non-interactive --exclude 'plugins/.*/tests/.*' plugins
      - name: Show environment name
        run: |
          echo "Environment: ${{ job.environment }}"

  test:
    name: Test "${{ inputs.marker }}"
    runs-on: build1
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      CARTESIA_API_KEY: ${{ secrets.CARTESIA_API_KEY }}
      DEEPGRAM_API_KEY: ${{ secrets.DEEPGRAM_API_KEY }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      FAL_KEY: ${{ secrets.FAL_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
      STREAM_API_KEY: ${{ secrets.STREAM_API_KEY }}
      STREAM_API_SECRET: ${{ secrets.STREAM_API_SECRET }}
      XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
      AWS_BEARER_TOKEN_BEDROCK: "${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}"
      _BEARER_TOKEN_BEDROCK: "${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}"
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: ./.github/actions/python-uv-setup
      - name: Export AWS_BEARER_TOKEN_BEDROCK (heredoc)
        shell: bash
        run: |
          {
            echo 'AWS_BEARER_TOKEN_BEDROCK<<EOF'
            echo "${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}"
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Verify presence
        run: uv run python -c "import os; v=os.getenv('AWS_BEARER_TOKEN_BEDROCK'); print('exists', v is not None, 'len', 0 if v is None else len(v))"
      - name: Run test
        run: uv run pytest -n auto -m "${{ inputs.marker }}"
      - name: Run plugin test
        run: uv run pytest plugins/*/tests/*.py -n auto -m "${{ inputs.marker }}"
