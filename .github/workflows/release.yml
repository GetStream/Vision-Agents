name: Integration (pre-release / release)
on:
  push:
    tags:
      - 'v*'          # run when you push a version tag like v1.2.3
  release:
    types: [published] # run when a GitHub Release is published
  workflow_dispatch: {}

jobs:
  integration:
    uses: ./.github/workflows/run_tests.yml
    with:
      marker: 'integration'
      extra-args: ''
    secrets: inherit

  build-core:
    name: Build & Test Core SDK
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: ./.github/actions/python-uv-setup

      - name: Build core distributions
        run: |
          uv build -o dist

      - name: Extract package version
        id: get_version
        run: |
          python - <<'PY'
          import tomllib, pathlib, os
          meta = tomllib.loads(pathlib.Path('pyproject.toml').read_text())
          version = meta['project']['version']
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              fh.write(f'version={version}\n')
          PY

#      - name: Publish core to TestPyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/
#          packages-dir: dist
#        environment:
#          name: testpypi

  test-core-index:
    name: Verify Core from TestPyPI
    needs: build-core
    runs-on: ubuntu-latest
    env:
      UV_NO_SOURCES: "1"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python-version || '3.12' }}

      - name: Install uv and testing tools
        run: |
          python -m pip install uv
          uv pip install pytest pytest-asyncio

      - name: Install core from TestPyPI using uv
        run: |
          uv pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple getstream==${{ needs.build-core.outputs.version }}

      - name: Run core tests against TestPyPI artifact
        run: |
          UV_NO_SOURCES=1 uv run pytest tests/ --ignore=getstream/plugins